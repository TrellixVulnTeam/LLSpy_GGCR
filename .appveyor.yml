branches:
  only:
    - master

environment:
  MINICONDA_VERSION: "3.5.5"
  CONDA_INSTALL_LOCN: "C:\\conda"
  CMD_IN_ENV: "cmd /E:ON /V:ON /C scripts\\obvci_appveyor_python_build_env.cmd"

  matrix:
    - TARGET_ARCH: "x64"
      CONDA_PY: "35"

# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable.
platform:
    - x64

install:
    - "python bootstrap-obvious-ci-and-miniconda.py %CONDA_INSTALL_LOCN% %TARGET_ARCH% %CONDA_PY:~0,1% --without-obvci"
    - "SET PATH=%CONDA_INSTALL_LOCN%;%CONDA_INSTALL_LOCN%\\Scripts;%PATH%"

    - "python scripts\\obvci_install_conda_build_tools.py"
    - "conda info"

# Skip .NET project specific build phase.
build: off

test_script:
    - "%CMD_IN_ENV% conda build conda.recipe"

on_success:
    - "conda build conda.recipe --output > llspy_fname.txt"
    - "set /p FNAME= < llspy_fname.txt"

    - "python -c \"import os; tag = os.environ.get('APPVEYOR_REPO_TAG', 'false'); is_master = os.environ.get('APPVEYOR_REPO_BRANCH', None) == 'master'; is_pr = os.environ.get('APPVEYOR_PULL_REQUEST_NUMBER', ''); print(tag not in ['false', ''] or (is_master and not is_pr));\" > is_tag_or_master.txt"
    - "set /p TAG_OR_MASTER= < is_tag_or_master.txt"
    - "ECHO '%TAG_OR_MASTER%'"
    - "if '%TAG_OR_MASTER%' == 'True' (anaconda -t %CONDA_UPLOAD_TOKEN% upload %FNAME% -u talley -c talley --force)"
